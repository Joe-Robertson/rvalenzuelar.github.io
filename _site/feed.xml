<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">MNTMET</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://mntmetblog.com/feed.xml" />
<link rel="alternate" type="text/html" href="http://mntmetblog.com" />
<updated>2014-11-06T21:53:19-07:00</updated>
<id>http://mntmetblog.com/</id>
<author>
  <name>Raul Valenzuela</name>
  <uri>http://mntmetblog.com/</uri>
  <email>raul.valenzuela@colorado.edu</email>
</author>


  

<entry>
  <title type="html"><![CDATA[Making a 3D terrain schematic]]></title>
  <link rel="alternate" type="text/html" href="http://mntmetblog.com/making-3D-terrain-schematic/" />
  <id>http://mntmetblog.com/making-3D-terrain-schematic</id>
  <published>2014-11-06T21:53:18-07:00</published>
  <updated>2014-11-06T21:53:18-07:00</updated>
  <author>
    <name>Raul Valenzuela</name>
    <uri>http://mntmetblog.com</uri>
    <email>raul.valenzuela@colorado.edu</email>
  </author>
  <content type="html">&lt;p&gt;I was one of those kids attracted to books containing more draws and figures than words. Not surprisingly, the scientific world is full of papers with figures so I keep attracted to a neat figures in any paper.&lt;/p&gt;

&lt;p&gt;ssss&lt;/p&gt;

&lt;p&gt;In my research about mountain precipitation, I found this figure:&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;/images/professional_schematic.jpg&quot;&gt;&lt;img src=&quot;/images/professional_schematic.jpg&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Example of a professional artistic schematic&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;blababl&lt;a href=&quot;http://bc.outcrop.org/Schott/&quot;&gt;Ronald Schott&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I tried to track back the author and see if he/she could give me some advice in how to reach a similar result. Not the same result because I know this is also art and I’m not an artist. Unfourtunately, I couldn’t find the author; however, I figured out a solution to make my scheme somewhat closer to what I was looking for.&lt;/p&gt;

&lt;p&gt;In this tutorial I’ll show you how I made this figure, which I included as the schematic of my paper:&lt;/p&gt;

&lt;p&gt;[insert schematic]&lt;/p&gt;

&lt;h1 id=&quot;tools&quot;&gt;Tools:&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Patience&lt;/li&gt;
  &lt;li&gt;Google Sketchup&lt;/li&gt;
  &lt;li&gt;Inkscape (or any similar)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;first-steps&quot;&gt;First steps&lt;/h1&gt;

&lt;p&gt;As you already noticed, this tutorial is about a 3D schemtic that involves a perspective view of a elevation terrain. However, Google Sketchup (GS) allows you to make any kind of 3D figure (so far I know), so can also try it for a schematic of different nature (e.g. pipes, houses, etc).&lt;/p&gt;

&lt;p&gt;I’ve seen tutorial using Blend to create a terrain from a Digital Elevation Model. This could also be an alternative but I haven’t explored Blend to do so. If you have reached similar (or even better) results with Blend please send me an email.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://mntmetblog.com/making-3D-terrain-schematic/&quot;&gt;Making a 3D terrain schematic&lt;/a&gt; was originally published by Raul Valenzuela at &lt;a href=&quot;http://mntmetblog.com&quot;&gt;MNTMET&lt;/a&gt; on November 06, 2014.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Weather radars: an animated example]]></title>
  <link rel="alternate" type="text/html" href="http://mntmetblog.com/example-doppler-radar/" />
  <id>http://mntmetblog.com/example-doppler-radar</id>
  <published>2014-11-05T22:09:41-07:00</published>
  <updated>2014-11-05T22:09:41-07:00</updated>
  <author>
    <name>Raul Valenzuela</name>
    <uri>http://mntmetblog.com</uri>
    <email>raul.valenzuela@colorado.edu</email>
  </author>
  <content type="html">&lt;p&gt;Physical sciences are traditionally based on observations. For example, in atmospheric sciences there are a number of instruments that allow us to observe and learn about different parts of the atmosphere, from a simple thermometer to more complex instruments like radars (which stand for Radio Detection and Ranging).&lt;/p&gt;

&lt;p&gt;First radars were focused on military applications during the World War II. Some years later, radar operators started to realize that radars were detecting not only aircrafts, but also other objects in the sky. After studying this “issue”, operators learned that these non-conventional signals returned from the distant weather, and therefore that radars could also be used in weather applications.&lt;/p&gt;

&lt;p&gt;Radars use the same principle by which timing the fall of a stone into a water well gives you an estimation of its depth. For example, the stone falls with a &lt;a href=&quot;http://en.wikipedia.org/wiki/Equations_of_motion#Constant_linear_acceleration:_collinear_vectors&quot;&gt;constant linear acceleration&lt;/a&gt; (~9.8 m/s2). Therefore, if you know the time between the release of the stone and the sound of the stone hitting the water surface, then you can easily compute the distance using Newton’s equation of motion. In the case of a radar, the antenna transmits an &lt;a href=&quot;http://en.wikipedia.org/wiki/Electromagnetic_radiation&quot;&gt;electromagnetic signal&lt;/a&gt; (e.g. the stone) that travels at a constant speed trough the air (speed of light). If this signal interacts with some object (e.g. water surface in the well) then the antenna receives a signal back (e.g. the sound from the water surface) and the distance to the object is then computed using the &lt;a href=&quot;http://www.radartutorial.eu/01.basics/The%20Radar%20Range%20Equation.en.html&quot;&gt;radar equation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As I mentioned before, radars were first developed for military propouses and then for scientific goals. Usually, when radars are oriented for research or survillance of the atmosphere they are denominated weather radars. Unlike the rest of the radars, weather radars are built with the detection of small atmospheric particles in mind, such as aerosols, cloud drops, and rain. Of course, at the end the signal transmited by the radar will detect any flying object (like bugs, birds, and aircrafts). The key point is chosing the right electromagnetic signal for the right object.&lt;/p&gt;

&lt;p&gt;In applications other than research and survillance of the atmosphere, radars focus on detecting relatively large objects and therefore radio waves are sufficient for estimating the location of aircrafts or ships at long distances and with a small loss of the signal (assuming ideal conditions). Nevertheless, detecting tiny atmospheric particles requeries signals borrowed from the electromagnetic spectrum known as microwaves. &lt;/p&gt;

&lt;p&gt;Depending on the size and number of particles present in a given air volume, the signal can return information back to the radar or just pass through air volume. For example, thinny cloud particles will appear invisible to radars with large wavelengths (e.g. 10 cm), whereas large raindrops will attenuate the signal of radars with short wavelengths (e.g. 3 cm) and make the air volume behind these large raindrops appear “invisible” to the radar. &lt;/p&gt;

&lt;p&gt;A very basic weather radar would point its antenna to a fixed point in the sky and retrieve information along that single radar beam. However, radars usually have a mechanism to rotate the antenna using a certain scan strategy over a volume of the sky. This capability is of large importance to explore and understand structures in the circulation of the atmosphere, at least locally. &lt;/p&gt;

&lt;p&gt;The most common scan strategy is called plain-position indicator or PPI. I will not get into details about the origin of this name (dated back to the first radars); however, I will explain how this scan is performed. If you stand stright and rise your arm in a 90 degree angle with respect to your torso, and assuming your arm represents a radar beam, then you would be using a 0 degree elevation angle. This would be your fixed elevation angle. Now, if you rise your arm to form 90.5 degrees with respect to your torso, then the fixed elevation angle of the radar beam would be 0.5 degrees. Finally, keeping this position, if you start rotating around yourself completing 360 degrees, then you would be making a complete PPI scan at 0.5 degrees elevation angle.&lt;/p&gt;

&lt;p&gt;In addition to the radar’s wavelength, many modern radars have a system to detect the velocity at which particles are moving through the air. The physical principle dictates that if the EM sent by the radar has a different phase once returned, then the difference in phase will be proportional to the speed of the particle. This principle was stablished by &lt;a href=&quot;http://en.wikipedia.org/wiki/Christian_Doppler&quot;&gt;Christian Doppler&lt;/a&gt; and today is known as the Doppler effect. &lt;/p&gt;

&lt;p&gt;The Doppler effect principle is relatively simple to understand. Nevertheless, its interpretation is slighly more difficult with scanning radars due to the rotation of the antenna. I will get into more details about the Doppler velocity interperation in a future post. Meanwhile, here I left an example of a PPI scan made at 0.5 degrees of elevation angle along the coast of northern California. &lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;/images/PPI_animation.gif&quot;&gt;&lt;img src=&quot;/images/PPI_animation.gif&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Example of a plan-position indicator (PPI) scan strategy&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;In the left panel you see the Doppler velocity associated with the landfalling winter storm. Cold colors represent negative Doppler velocity values. This means that the airflow at each of these points is moving toward the radar along the beam. Warm colors represent poisitve Doppler velocity values. This means that the airflow is moving away from the radat at each of these points along the radar beam. The right panel shows the radar reflectivity. The more redish the colors, the largest the reflectivity, and largest the raindrops. In both panels the elevation of the coastal terrain is represented by black and white colors &lt;a href=&quot;#Rinehart&quot;&gt;(Rinehart, 1997)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A book that I would recommend for starting in weather radar meteorology is &lt;a href=&quot;http://www.radarwx.com/Welcome.html&quot;&gt;Radar for Meteorologis&lt;/a&gt; by Ronald Rinehart. It provides the basics necessary to access to more quantitative-focused books (there are many of them)&lt;/p&gt;

&lt;p&gt;References&lt;/p&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;span id=&quot;Rinehart&quot;&gt;Rinehart, R. E. (1997). &lt;i&gt;Radar for Meteorologists&lt;/i&gt; (3rd ed.). Rinehart Pub.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;


  &lt;p&gt;&lt;a href=&quot;http://mntmetblog.com/example-doppler-radar/&quot;&gt;Weather radars: an animated example&lt;/a&gt; was originally published by Raul Valenzuela at &lt;a href=&quot;http://mntmetblog.com&quot;&gt;MNTMET&lt;/a&gt; on November 05, 2014.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Atmospheric Thermodynamics by Craig Bohren]]></title>
  <link rel="alternate" type="text/html" href="http://mntmetblog.com/atmospheric-thermodynamics/" />
  <id>http://mntmetblog.com/atmospheric-thermodynamics</id>
  <published>2014-11-03T23:30:24-07:00</published>
  <updated>2014-11-03T23:30:24-07:00</updated>
  <author>
    <name>Raul Valenzuela</name>
    <uri>http://mntmetblog.com</uri>
    <email>raul.valenzuela@colorado.edu</email>
  </author>
  <content type="html">&lt;p&gt;This is the first in a series of book reviews that I inted to make. Somehow, I developed a compulsion for books and today I need to control my self to keep the pointer of my mouse far from the Amazon’s “add to car” button when I see a book I like. Perhaps it is because in my home country (Chile) books are ridicously expensive or just because being a click away from a book I like is very temptative. Whatever the reason might be, I feel fortunate to have access to the physical copies of really nice books in atmospheric science and I would like to share what I have and I haven’t learned from these sources of knowledge.&lt;/p&gt;

&lt;p&gt;Since my experience in the field of atmospheric science is short (2-3 years) I will not make that kind of review that you might expect to see in a scientific journal, usually made by people who has a long career in the field to people who has a long experience in the field. Instead, I will provide an informal conversation with my younger self back maybe 2, 3, or 4 years ago, to tell what I could learn from each book and if they are plain boring or somehow fun.&lt;/p&gt;

&lt;p&gt;And because fun is better than boring (not only in science of course) I will begin with one of the textbooks that I like the most within the atmospheric science field (yes, I read other stuff too). This book, titled Atmospheric Thermodynamics and written by Craig Bohren, is the first textbook in thermodynamics that I have read almost entearly. Partially because is fun and partially because I am always trying to find answer from it.&lt;/p&gt;

&lt;p&gt;I first knew about Craig Bohren while taking a course in atmospheric radiative transfer with Cora Randall. Thankfully, Cora recomended one of the Bohren’s book in radiative transfer. If you read that book and you don’t laugh or at least smile after 3 or 4 pages then either I have a weird sense of humor that I share with Craig or you have a weird sense of humor and should hang out more. Anyway, after some googling I learned that Craig also had a book in thermodynamics. &lt;/p&gt;

&lt;p&gt;Thermodynamics has been a subject a bit obscure to me. I feel did not have a good base from school; however, I’ve always felt curiosity about the concept of energy that thermodynamics provides. Also, I like this agregated point of view of the molecules, because, at least to some extent, reminds me about people’s behavior. Nevertheless, thermodynamics is not an fun subject by itself and personally I don’t see anyone liking thermodynamics except for people wondering about energy from a systematic and quantitative point of view. Notice that you might also wonder about energy from a spiritual point of view, but in that case you should read something about Budhissm or Tai Chi.&lt;/p&gt;

&lt;p&gt;So, the subject is not fun by itself. Then, that is where Craig makes one if his largest (in my opinion) achivements. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;I think that among all of them, this is my favorite. Not only Bohren put his best effort to explain the concepts in their simplest form, but also he makes a deligthful use of jokes and historical fun-facts to keep the reader interested and motivated to know the origin and extension of the most important concepts in thermodynamics. Perhaps the historical controversies are the most useful fun-facts. For example…Maybe what I like the most is that he is very critic with the loosly use of thermodynamic concepts and principles. For instance…&lt;/a&gt;&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://mntmetblog.com/atmospheric-thermodynamics/&quot;&gt;Atmospheric Thermodynamics by Craig Bohren&lt;/a&gt; was originally published by Raul Valenzuela at &lt;a href=&quot;http://mntmetblog.com&quot;&gt;MNTMET&lt;/a&gt; on November 03, 2014.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Atmospheric sciences books]]></title>
  <link rel="alternate" type="text/html" href="http://mntmetblog.com/atmospheric-sciences-books/" />
  <id>http://mntmetblog.com/atmospheric-sciences-books</id>
  <published>2014-11-03T23:28:26-07:00</published>
  <updated>2014-11-03T23:28:26-07:00</updated>
  <author>
    <name>Raul Valenzuela</name>
    <uri>http://mntmetblog.com</uri>
    <email>raul.valenzuela@colorado.edu</email>
  </author>
  <content type="html">&lt;p&gt;These are books that I have extensively used during my PhD, especially during the first two year of the program. As a result, most of them are in poor physical conditions today, but still usable.&lt;/p&gt;

&lt;p&gt;This review does not intend to be complete nor detailed. It is from my short experience in the field of atmospheric sciences (about 3 yrs). However, it will be especially usefull for those who are shifting their career to atmospheric science and they had small or no experience/familiarity with atmospheric sciences topics previously.&lt;/p&gt;

&lt;p&gt;Most of these books were included in the syllabus of the PhD courses and the rest showed up on my way home.&lt;/p&gt;

&lt;h3 id=&quot;atmospheric-and-oceanic-fluid-dynamics&quot;&gt;Atmospheric and Oceanic Fluid Dynamics&lt;/h3&gt;

&lt;p&gt;Author: Vallis&lt;/p&gt;

&lt;h3 id=&quot;atmospheric-chemistry-and-physics-from-air-pollution-to-climate-change&quot;&gt;Atmospheric Chemistry and Physics: From Air Pollution to Climate Change&lt;/h3&gt;

&lt;p&gt;Author: Seinfeld and Pandis&lt;/p&gt;

&lt;p&gt;One of the biggest book I have used in my life. As the title clearly suggest, it covers a good number of topics and with an appreciable level of detail. I mostly used the cloud and precipitation chapters. The introduction is a good review of basics.&lt;/p&gt;

&lt;h3 id=&quot;a-first-course-in-atmospheric-radiation&quot;&gt;A First Course in Atmospheric Radiation&lt;/h3&gt;

&lt;p&gt;Author: Petty&lt;/p&gt;

&lt;p&gt;My introduction to radiative transfer was very limited during my undergrad program. Therefore, it was very dificult to asimilate all these “abstract” concepts just in a semestre. Thankfully, Petty makes things a bit easier to people who is initiating in atmospheric sciences. &lt;/p&gt;

&lt;h3 id=&quot;an-introduction-to-dynamic-meteorology&quot;&gt;An Introduction to Dynamic Meteorology&lt;/h3&gt;

&lt;p&gt;Author: Holton&lt;/p&gt;

&lt;p&gt;I remember my Physics professor recomending me to read Holton to answer one of the questions that I asked him while I was undergrad. And I still rembember that that was like a whole foreing language to me (even in Spanish). Then, during my graduate student days this book has been a good support for concepts that are used frequently in atmosferic sciences. Nevertheless, I would say that you need to complement it with other books. At least to me, some of the explanations assumed that you had a previous knowledge either of physics or atmospheric sciences. In other words, I thinks that some explanations are not streightforward. &lt;/p&gt;

&lt;h3 id=&quot;atmospheric-sciences-an-introductory-survey&quot;&gt;Atmospheric Sciences: An Introductory Survey&lt;/h3&gt;

&lt;p&gt;Author: John Wallace and Peter Hobbs&lt;/p&gt;

&lt;p&gt;From what I’ve heard, Wallace and Hobbs is a classic among first year graduate students.&lt;/p&gt;

&lt;h3 id=&quot;a-short-course-in-cloud-physics&quot;&gt;A Short Course in Cloud Physics&lt;/h3&gt;

&lt;p&gt;Author: Rogers and Yau&lt;/p&gt;

&lt;p&gt;It is focused in cloud microphysics.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://mntmetblog.com/atmospheric-sciences-books/&quot;&gt;Atmospheric sciences books&lt;/a&gt; was originally published by Raul Valenzuela at &lt;a href=&quot;http://mntmetblog.com&quot;&gt;MNTMET&lt;/a&gt; on November 03, 2014.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Presentation at the 16th Conference on Mountain Meteorology]]></title>
  <link rel="alternate" type="text/html" href="http://mntmetblog.com/16th-conference-mountain-meteorology/" />
  <id>http://mntmetblog.com/16th-conference-mountain-meteorology</id>
  <published>2014-11-02T00:00:00-06:00</published>
  <updated>2014-11-02T00:00:00-06:00</updated>
  <author>
    <name>Raul Valenzuela</name>
    <uri>http://mntmetblog.com</uri>
    <email>raul.valenzuela@colorado.edu</email>
  </author>
  <content type="html">&lt;p&gt;Last August the American Meteorological Society held the &lt;a href=&quot;http://www2.ametsoc.org/stac/index.cfm/committees/committee-on-mountain-meteorology/conferences/&quot;&gt;16th Conference on Mountain Meteorology&lt;/a&gt; in San Diego, California. In this opportunity, I presented some results of the paper I’m working on along with David Kingsmill. &lt;/p&gt;

&lt;p&gt;Essentially, we argue that one of the forcing mechanisms of orographic precipitation along the coastal mountains of northern California is trough terrain-trapped airflows (TTA). We introduce this concept as a generalization of well known low-level blocked flows and coastal channeled flows.&lt;/p&gt;

&lt;p&gt;More details about TTAs and the abovementioned study will be available (hopefully) soon in an article we submitted to Monthly Weather Review.&lt;/p&gt;

&lt;p&gt;Here is the &lt;a href=&quot;https://ams.confex.com/ams/16MountMet/videogateway.cgi/id/28258?recordingid=28258&quot;&gt;recorded presentation&lt;/a&gt;&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://mntmetblog.com/16th-conference-mountain-meteorology/&quot;&gt;Presentation at the 16th Conference on Mountain Meteorology&lt;/a&gt; was originally published by Raul Valenzuela at &lt;a href=&quot;http://mntmetblog.com&quot;&gt;MNTMET&lt;/a&gt; on November 02, 2014.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Mountain meteorology books]]></title>
  <link rel="alternate" type="text/html" href="http://mntmetblog.com/mountain-meteorology-books/" />
  <id>http://mntmetblog.com/mountain-meteorology-books</id>
  <published>2014-10-21T22:35:56-06:00</published>
  <updated>2014-10-21T22:35:56-06:00</updated>
  <author>
    <name>Raul Valenzuela</name>
    <uri>http://mntmetblog.com</uri>
    <email>raul.valenzuela@colorado.edu</email>
  </author>
  <content type="html">&lt;p&gt;Here are two of the books I’ve used during my research and that are worth to check out. &lt;/p&gt;

&lt;h3 id=&quot;mountain-meteorology-fundamentals-and-applications&quot;&gt;Mountain Meteorology: Fundamentals and Applications&lt;/h3&gt;

&lt;p&gt;Author: David Whiteman&lt;/p&gt;

&lt;p&gt;In my opinion, Whiteman’s book is good for an entry level audience, perhaps senior undergrad and master/doctorate students that are first approaching to Mountain Meteorology (like me). &lt;/p&gt;

&lt;h3 id=&quot;mountain-weather-research-and-forecasting-recent-progress-and-current-challenges&quot;&gt;Mountain Weather Research and Forecasting: recent progress and current challenges&lt;/h3&gt;

&lt;p&gt;Editors: Fotini K. Chow, Stephan F.J. De Wekker, and Bradley J. Snyder&lt;/p&gt;

&lt;p&gt;Insert review here&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://mntmetblog.com/mountain-meteorology-books/&quot;&gt;Mountain meteorology books&lt;/a&gt; was originally published by Raul Valenzuela at &lt;a href=&quot;http://mntmetblog.com&quot;&gt;MNTMET&lt;/a&gt; on October 21, 2014.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Making an auto-updating plot with python and plotly]]></title>
  <link rel="alternate" type="text/html" href="http://mntmetblog.com/making-autoupdating-plot-in-plotly/" />
  <id>http://mntmetblog.com/making-autoupdating-plot-in-plotly</id>
  <published>2014-10-12T00:00:00-06:00</published>
  <updated>2014-10-12T00:00:00-06:00</updated>
  <author>
    <name>Raul Valenzuela</name>
    <uri>http://mntmetblog.com</uri>
    <email>raul.valenzuela@colorado.edu</email>
  </author>
  <content type="html">&lt;p&gt;There are those days when you find tabulated information on the web that is relevant for your homework/assignment/research. Of course, if the owner of this information only cares about its dissemination, you will probably see that there is no figure representing these data visually.&lt;/p&gt;

&lt;p&gt;In my case, I needed to visualize meteorological data for the Denver International Airport (&lt;a href=&quot;http://w1.weather.gov/obhistory/KDEN.html&quot;&gt;KDEN&lt;/a&gt;) uploaded every hour by the National Weather Service. Of cousre, the data are tabulated and there is no figure representing the information. So here is where Plotly comes to play.&lt;/p&gt;

&lt;p&gt;One advantage of Plotly is its well documented &lt;a href=&quot;http://en.wikipedia.org/wiki/Application_programming_interface&quot;&gt;API&lt;/a&gt;. If you visit the &lt;a href=&quot;https://plot.ly/api/&quot;&gt;Plotly API library&lt;/a&gt; you will find APIs for Python, Matlab, R, Node.js, Julia, and …wait for it…Excel. This means that with any of these programming languages (excluding Excel of course) you can replace your native plotting functions for the Plotly API and upload your plot online.&lt;/p&gt;

&lt;h1 id=&quot;first-step&quot;&gt;First step&lt;/h1&gt;

&lt;p&gt;I’m very familiar with Matlab and its plotting functions; however, I wanted to try a different approach for what I had in mind. So my first step was start learning Python…or at least the basics. This step should not be difficult to you if you are familiar with &lt;a href=&quot;http://en.wikipedia.org/wiki/High-level_programming_language&quot;&gt;high-level programming languages&lt;/a&gt; like Matlab and if you have a basic notion about the &lt;a href=&quot;http://en.wikipedia.org/wiki/Object-oriented_programming&quot;&gt;Object Oriented Programming&lt;/a&gt; (OOP) paradigm. If the last condition does not apply to you, I would recommend reading about OOP before start learning Python.&lt;/p&gt;

&lt;h1 id=&quot;second-step&quot;&gt;Second step&lt;/h1&gt;

&lt;p&gt;Learning Python was not a “just-for-fun” step, it had a purpose. After some &lt;a href=&quot;http://en.wikipedia.org/wiki/Google_%28verb%29&quot;&gt;googling&lt;/a&gt; (yes, it seems to be “officially” a verb), I realized that there is something in this world called &lt;a href=&quot;http://en.wikipedia.org/wiki/Web_scraping&quot;&gt;web scraping&lt;/a&gt;. In short, this means that you use your favorite programming language to search and extract data from websites automatically.&lt;/p&gt;

&lt;p&gt;So, there was my new vocabulary word when I met &lt;a href=&quot;http://www.crummy.com/software/BeautifulSoup/&quot;&gt;Beautiful Soup&lt;/a&gt; (BS). As you can guess, BS helps to web-scrap the web using Python. It took me a while to get used to the BS syntax, but I made extensive use of this tutorial made by &lt;a href=&quot;https://www.youtube.com/watch?v=G7RS5BBWxgo&quot;&gt;Susane mcg&lt;/a&gt; to get the basics that I needed.&lt;/p&gt;

&lt;h1 id=&quot;third-step&quot;&gt;Third step&lt;/h1&gt;

&lt;p&gt;As &lt;a href=&quot;https://www.youtube.com/watch?v=G7RS5BBWxgo&quot;&gt;Susane mcg&lt;/a&gt; explain, you can us BS to download a table, save it as a variable, and then search for the specific html tag that contains the data. Therefore, as the Art of War of Sun Tzu says…“know your enemy” (actually I have no idea if it says that). For this, I explored the html structure of the table looking for the table tag that was most useful for extracting the data. This is important because a table might have embedded tables, so you need to look for the one you need.&lt;/p&gt;

&lt;h1 id=&quot;fourth-step&quot;&gt;Fourth step&lt;/h1&gt;
&lt;p&gt;Get familiar with Plotly. You need to install the &lt;a href=&quot;https://plot.ly/python/getting-started/&quot;&gt;API for python&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;fifth-step&quot;&gt;Fifth step&lt;/h1&gt;
&lt;p&gt;Get your hands dirty. We will create a python script called plot_plotly.py. &lt;/p&gt;

&lt;p&gt;First, we import the libraries that we will be using:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib&lt;/span&gt; 			&lt;span class=&quot;c&quot;&gt;# html handling&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt;			&lt;span class=&quot;c&quot;&gt;# date handling&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.plotly&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;py&lt;/span&gt; 	&lt;span class=&quot;c&quot;&gt;# online plotting&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.graph_objs&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# online plotting&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bs4&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;	&lt;span class=&quot;c&quot;&gt;# html parsing&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt; 			&lt;span class=&quot;c&quot;&gt;# command-line argument handling&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A python script can accept arguments from the command-line using sys. Thus, we can use the name of the station (KDEN) as input argument or choose a different station if needed (e.g. KORD):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;station&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;station&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;KDEN&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;WRONG STATION NAME!!&amp;#39;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then, we use station for parsing and retrieve the url that hosts the table:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;urlStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://w1.weather.gov/obhistory/&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;station&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;.html&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;…and save this to a local variable to be processes by BS:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now it is the turn of BS to work. First, we process the raw html with BS (like when you digest your soup, but the other way around…eww):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We look for a specific table that has a cell spacing value of 3:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;table&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cellspacing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;From this table, we look for all its rows:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;dataRows&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;tr&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Since the data contained in the table are basically time series of temperature, pressure, etc, we will create vectors containing this information. First, we initialize the variables:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;	&lt;span class=&quot;c&quot;&gt;# day&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;hor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; 	&lt;span class=&quot;c&quot;&gt;# hour&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; 	&lt;span class=&quot;c&quot;&gt;# minute&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; 	&lt;span class=&quot;c&quot;&gt;# air temperature&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dwp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; 	&lt;span class=&quot;c&quot;&gt;# dew point temperature&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tmx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; 	&lt;span class=&quot;c&quot;&gt;# max temperature 6-h&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tmn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; 	&lt;span class=&quot;c&quot;&gt;# min temperature 6-h&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;prs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; 	&lt;span class=&quot;c&quot;&gt;# pressure&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Although some people say that this is not necessary in Python, you’ll get an initialization error when using these variables in the following loop. This loop populates the vectors with the information extracted from the table:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;arrayLen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rowNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;rowCells&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;td&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rowCells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cellNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cell&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rowCells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;cellContents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cellNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cellContents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cellNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;hor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cellContents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;mnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cellContents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]))&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cellNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cellContents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;NaN&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cellNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;dwp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cellContents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;	
					&lt;span class=&quot;n&quot;&gt;dwp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;NaN&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cellNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;tmx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cellContents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;tmx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;NaN&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cellNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;tmn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cellContents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;tmn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;NaN&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cellNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;prs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cellContents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;prs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;NaN&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;arrayLen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arrayLen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We reverse the vectors, so the oldest data resides in the first vector index and the newer in the last:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;hor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;prs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dwp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tmx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tmn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We can determine the month and year from the system time:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;dayNow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;monNow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;yerNow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;yer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thisDay&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thisDay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dayNow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;monNow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;mon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;yer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yerNow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thisDay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dayNow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;mon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;monNow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;yer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yerNow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;mon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;monNow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;yer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yerNow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, create a time vector:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;mydate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hour&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; 	
			&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arrayLen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note the embedded loop in the variable above. From what I’ve learned, that’s common practice in Python.&lt;/p&gt;

&lt;p&gt;Now that we have the data in vector form, we can make use of Plotly. You need to create an account in Plotly (which is for free) to be able to upload your plot. You will then receive information for logging in from the python script:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sign_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;xxxxxxxx&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There are different options in Plotly to create a time series plot, called trace. Here, I use a single X axis for all the traces and a second Y axis for pressure:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;trace1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;pressure&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mydate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
	&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;lines&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;yaxis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;y2&amp;#39;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;trace2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;temperature&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mydate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;lines&amp;#39;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;trace3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;dew point&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;	
	&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mydate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dwp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;lines&amp;#39;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;trace4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;tmax 6-h&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;	
	&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mydate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;markers&amp;#39;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;trace5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;tmin 6-h&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;	
	&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mydate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;markers&amp;#39;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trace1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trace2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trace3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trace4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trace5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then, you can use the following code for the updating time and date of the last plot:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;titleStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;lt;b&amp;gt;National Weather Service - Denver International Airport (KDEN)&amp;lt;/b&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nowStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;%Y-%m-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%d&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; %H:%M:%S&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;updateStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;lt;br&amp;gt;&amp;lt;i&amp;gt;Last Update: &amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nowStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39; (MDT)&amp;lt;/i&amp;gt;&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, we create a layout:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titleStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;updateStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;xaxis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;XAxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Time (MDT)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;yaxis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;YAxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Temperature(F)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;yaxis2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;YAxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.55&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Pressure(hPa)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;..then make a figure object:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;…and finally send the figure to Plotly:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;plot_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;plot-plotly-example-&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;station&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;auto_open&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;fileopt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;overwrite&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So, if everything is good, you should obtain a plot like this:&lt;/p&gt;

&lt;div class=&quot;image-wrap&quot;&gt;

&lt;iframe width=&quot;560&quot; height=&quot;420&quot; frameborder=&quot;0&quot; seamless=&quot;seamless&quot; scrolling=&quot;no&quot; src=&quot;https://plot.ly/~rvalenzuela/19/560/420&quot;&gt;&lt;/iframe&gt;

&lt;/div&gt;

&lt;h1 id=&quot;last-step&quot;&gt;Last step&lt;/h1&gt;

&lt;p&gt;Although the python script is ready to run, we need a way to run it automatically every hour. I learned that there is a Unix utility called &lt;a href=&quot;http://www.adminschoice.com/crontab-quick-reference&quot;&gt;Crontab&lt;/a&gt; which I found I had in my system by using:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;man crontab&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then, to edit the crontab schedule you type in your terminal:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;crontab -e&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will open a text file using the &lt;a href=&quot;http://en.wikipedia.org/wiki/Vi&quot;&gt;Vi&lt;/a&gt; text editor. Scheduling the python script to run every 62 minutes for KDEN station would be:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;*/62 * * * * /Users/raulvalenzuela/Documents/python/plot_plotly.py KDEN&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Two important things you need before the schedule can run:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;add this in the first line of your script: #! /usr/bin/env python&lt;/li&gt;
  &lt;li&gt;make the python script executable by using: chmod u+x&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;final-thoughts&quot;&gt;Final thoughts&lt;/h1&gt;

&lt;p&gt;Of course, there are many ways to do the same job and maybe with an even more efficient approach. However, if you are just learning Python (like me) then this will help you to play around a little bit and get the basic syntax of python.&lt;/p&gt;

&lt;p&gt;You might also note that this is not exactly the same plot I showed as example in a &lt;a href=&quot;http://mntmetblog.com/interactive-plots-plotly/&quot;&gt;previous post&lt;/a&gt;. Using this code, every time you run plot_plotly.py new data (if the NWS table is updated) will replace the table you already have in Plotly. Then, you need to work a little more the code in order to keep the existing table and just add the last data from the new NWS table, so your plot will extend until the last time you run the script.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://mntmetblog.com/making-autoupdating-plot-in-plotly/&quot;&gt;Making an auto-updating plot with python and plotly&lt;/a&gt; was originally published by Raul Valenzuela at &lt;a href=&quot;http://mntmetblog.com&quot;&gt;MNTMET&lt;/a&gt; on October 12, 2014.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Interactive online plots with plotly]]></title>
  <link rel="alternate" type="text/html" href="http://mntmetblog.com/interactive-plots-plotly/" />
  <id>http://mntmetblog.com/interactive-plots-plotly</id>
  <published>2014-10-07T00:00:00-06:00</published>
  <updated>2014-10-07T00:00:00-06:00</updated>
  <author>
    <name>Raul Valenzuela</name>
    <uri>http://mntmetblog.com</uri>
    <email>raul.valenzuela@colorado.edu</email>
  </author>
  <content type="html">&lt;p&gt;Thesedays there a number of online tools oriented to make plots and share them with social medias. I found &lt;a href=&quot;https://plot.ly/feed/#sob&quot;&gt;Plotly&lt;/a&gt; not long ago and here is an example. I made this plot using the Python API along with &lt;a href=&quot;http://en.wikipedia.org/wiki/Web_scraping&quot;&gt;web scraping&lt;/a&gt; using &lt;a href=&quot;http://www.crummy.com/software/BeautifulSoup/&quot;&gt;Beautiful Soup&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;image-wrap&quot;&gt;

&lt;iframe width=&quot;650&quot; height=&quot;550&quot; frameborder=&quot;0&quot; seamless=&quot;seamless&quot; scrolling=&quot;no&quot; src=&quot;https://plot.ly/~rvalenzuela/18/650/550&quot;&gt;&lt;/iframe&gt;

&lt;/div&gt;

&lt;div class=&quot;image-wrap&quot;&gt;

&lt;iframe width=&quot;650&quot; height=&quot;550&quot; frameborder=&quot;0&quot; seamless=&quot;seamless&quot; scrolling=&quot;no&quot; src=&quot;https://plot.ly/~rvalenzuela/16/650/550&quot;&gt;&lt;/iframe&gt;

&lt;/div&gt;

&lt;p&gt;I’ll explain in a future tutorial how I made them using Python.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://mntmetblog.com/interactive-plots-plotly/&quot;&gt;Interactive online plots with plotly&lt;/a&gt; was originally published by Raul Valenzuela at &lt;a href=&quot;http://mntmetblog.com&quot;&gt;MNTMET&lt;/a&gt; on October 07, 2014.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Hello World!]]></title>
  <link rel="alternate" type="text/html" href="http://mntmetblog.com/hello-world/" />
  <id>http://mntmetblog.com/hello-world</id>
  <published>2014-10-07T00:00:00-06:00</published>
  <updated>2014-10-07T00:00:00-06:00</updated>
  <author>
    <name>Raul Valenzuela</name>
    <uri>http://mntmetblog.com</uri>
    <email>raul.valenzuela@colorado.edu</email>
  </author>
  <content type="html">&lt;p&gt;Usually when you learn a new programming language, the first example is a “hello_world” program. Therefore, since I’m learning about &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; (which is supporting this website) and given that this is my first post, I decided to use this cliche title.&lt;/p&gt;

&lt;p&gt;I’ll be posting about topics in mountain meteorology (especially orographic precipitation), atmospheric sciences, progress in my research, some Matlab tips that I’ve learned during my PhD, and pictures of clouds that I’ve taken. Also, I’ll talk about Matlab, and their differences and similarities.&lt;/p&gt;

&lt;p&gt;Please, feel free to send me feedback about any article. Since I’m not a native english speaker, comments about typos/wording/grammar are especially welcome.&lt;/p&gt;

&lt;p&gt;If you find any original content in this website interesting and you’d like to use it, please send me an email. I’ll be glad to know that these stuff are useful to someone. Also, I’d appreciate refering to this site as the source.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://mntmetblog.com/hello-world/&quot;&gt;Hello World!&lt;/a&gt; was originally published by Raul Valenzuela at &lt;a href=&quot;http://mntmetblog.com&quot;&gt;MNTMET&lt;/a&gt; on October 07, 2014.&lt;/p&gt;</content>
</entry>

</feed>
